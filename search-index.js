var searchIndex = {};
searchIndex["web3"] = {"doc":"Ethereum JSON-RPC client (Web3).","items":[[4,"Error","web3","RPC error",null,null],[13,"Unreachable","","Server is unreachable",0,null],[13,"InvalidResponse","","Unexpected response was returned",0,null],[13,"Transport","","Transport Error",0,null],[13,"Rpc","","Error returned by RPC",0,null],[0,"api","","`Web3` implementation",null,null],[3,"Web3Main","web3::api","`Web3` wrapper for all namespaces",null,null],[0,"eth","","`Eth` namespace",null,null],[3,"EthApi","web3::api::eth","`Eth` namespace",null,null],[8,"Eth","","List of methods from `eth` namespace",null,null],[10,"accounts","","Get list of available accounts.",1,null],[10,"block_number","","Get current block number",1,null],[10,"call","","Call a constant method of contract without changing the state of the blockchain.",1,null],[10,"coinbase","","Get coinbase address",1,null],[10,"compile_lll","","Compile LLL",1,null],[10,"compile_solidity","","Compile Solidity",1,null],[10,"compile_serpent","","Compile Serpent",1,null],[10,"estimate_gas","","Call a contract without changing the state of the blockchain to estimate gas usage.",1,null],[10,"gas_price","","Get current recommended gas price",1,null],[10,"balance","","Get balance of given address",1,null],[10,"block","","Get block details",1,null],[10,"block_transaction_count","","Get number of transactions in block",1,null],[10,"code","","Get code under given address",1,null],[10,"compilers","","Get supported compilers",1,null],[10,"storage","","Get storage entry",1,null],[10,"transaction_count","","Get nonce",1,null],[10,"transaction","","Get transaction",1,null],[10,"transaction_receipt","","Get transaction receipt",1,null],[10,"uncle","","Get uncle",1,null],[10,"uncle_count","","Get uncle count in block",1,null],[10,"work","","Get work package",1,null],[10,"hashrate","","Get hash rate",1,null],[10,"mining","","Get mining status",1,null],[10,"new_block_filter","","Start new block filter",1,null],[10,"new_pending_transaction_filter","","Start new pending transaction filter",1,null],[10,"protocol_version","","Start new pending transaction filter",1,null],[10,"send_raw_transaction","","Sends a rlp-encoded signed transaction",1,null],[10,"send_transaction","","Sends a transaction transaction",1,null],[10,"sign","","Signs a hash of given data",1,null],[10,"submit_hashrate","","Submit hashrate of external miner",1,null],[10,"submit_work","","Submit work of external miner",1,null],[10,"syncing","","Get syncing status",1,null],[11,"new","","",2,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"accounts","","",2,null],[11,"block_number","","",2,null],[11,"call","","",2,null],[11,"coinbase","","",2,null],[11,"compile_lll","","",2,null],[11,"compile_solidity","","",2,null],[11,"compile_serpent","","",2,null],[11,"estimate_gas","","",2,null],[11,"gas_price","","",2,null],[11,"balance","","",2,null],[11,"block","","",2,null],[11,"block_transaction_count","","",2,null],[11,"code","","",2,null],[11,"compilers","","",2,null],[11,"storage","","",2,null],[11,"transaction_count","","",2,null],[11,"transaction","","",2,null],[11,"transaction_receipt","","",2,null],[11,"uncle","","",2,null],[11,"uncle_count","","",2,null],[11,"work","","",2,null],[11,"hashrate","","",2,null],[11,"mining","","",2,null],[11,"new_block_filter","","",2,null],[11,"new_pending_transaction_filter","","",2,null],[11,"protocol_version","","",2,null],[11,"send_raw_transaction","","",2,null],[11,"send_transaction","","",2,null],[11,"sign","","",2,null],[11,"submit_hashrate","","",2,null],[11,"submit_work","","",2,null],[11,"syncing","","",2,null],[0,"net","web3::api","`Net` namespace",null,null],[3,"NetApi","web3::api::net","`NetApi` namespace",null,null],[8,"Net","","List of methods from `net` namespace",null,null],[10,"version","","Returns protocol version",3,null],[10,"peer_count","","Returns numbers of peers connected to node.",3,null],[10,"is_listening","","Returns true if client is actively listening for network connections.",3,null],[11,"new","","",4,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"version","","",4,null],[11,"peer_count","","",4,null],[11,"is_listening","","",4,null],[0,"web3","web3::api","`Web3` namespace",null,null],[3,"Web3Api","web3::api::web3","`Web3Api` namespace",null,null],[8,"Web3","","List of methods from `web3` namespace",null,null],[10,"client_version","","Returns client version",5,null],[10,"sha3","","Returns sha3 of the given data",5,null],[11,"new","","",6,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"client_version","","",6,null],[11,"sha3","","",6,null],[8,"Namespace","web3::api","Common API for all namespaces",null,null],[10,"new","","Creates new API namespace",7,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"new","","Create new `Web3` with given transport",8,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"api","","Access methods from custom namespace",8,null],[11,"eth","","Access methods from `eth` namespace",8,null],[11,"net","","Access methods from `net` namespace",8,null],[11,"web3","","Access methods from `web3` namespace",8,null],[11,"eth_filter","","Access filter methods from `eth` namespace",8,null],[0,"transports","web3","Supported Ethereum JSON-RPC transports.",null,null],[0,"http","web3::transports","HTTP Transport",null,null],[3,"Http","web3::transports::http","HTTP Transport",null,null],[11,"from","web3","",0,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"new","web3::transports::http","Create new HTTP transport with given URL",9,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"execute","","",9,null],[6,"Result","web3","RPC result",null,null],[8,"Transport","","Transport implementation",null,null],[10,"execute","","Execute remote method with given parameters.",10,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null]],"paths":[[4,"Error"],[8,"Eth"],[3,"EthApi"],[8,"Net"],[3,"NetApi"],[8,"Web3"],[3,"Web3Api"],[8,"Namespace"],[3,"Web3Main"],[3,"Http"],[8,"Transport"]]};
initSearch(searchIndex);
